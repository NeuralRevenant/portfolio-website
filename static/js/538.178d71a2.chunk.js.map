{"version":3,"file":"static/js/538.178d71a2.chunk.js","mappings":"kMAMA,MA8HA,EA9HgBA,KACd,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,QAAS,MAEJC,EAAQC,IAAaL,EAAAA,EAAAA,UAAS,IAE/BM,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAO,MAEtBC,EAAcA,KAClBJ,EAAS,IAAI,GAGfK,EAAAA,EAAAA,YAAU,KACJH,EAAaI,SACfJ,EAAaI,QAAQC,aAAa,QAAS,OAC7C,GACC,IAEH,MAAMC,EAAgBC,IACpB,MAAM,KAAEd,EAAI,MAAEe,GAAUD,EAAEE,OAC1BlB,GAAamB,IAAQ,IAChBA,EACH,CAACjB,GAAOe,KACP,EA4BL,OACEG,EAAAA,EAAAA,KAAA,WAASC,GAAG,UAAUC,UAAU,kBAAiBC,UAC/CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BH,EAAAA,EAAAA,KAACK,EAAAA,EAAe,CACdC,KAAMC,EAAAA,IACNL,UAAU,aACVM,QAASjB,EACT,aAAW,yBACXkB,SAAS,IACTC,IAAKrB,EACLsB,KAAK,SACL,cAAY,QACZC,QAAUhB,IACM,UAAVA,EAAEiB,KAA6B,MAAVjB,EAAEiB,KAAatB,GAAa,KAGzDa,EAAAA,EAAAA,MAAA,WAASF,UAAU,gBAAeC,SAAA,EAChCH,EAAAA,EAAAA,KAAA,MAAIE,UAAU,kBAAiBC,SAAC,kBAChCC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,eAAeY,SA3ClBC,UACnBnB,EAAEoB,iBACF9B,EAAU,cACV,WACyB+B,MACrB,0DACA,CACEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU3C,MAGZ4C,IACXrC,EAAU,8BACVN,EAAY,CAAEE,KAAM,GAAIC,MAAO,GAAIC,QAAS,MAE5CE,EAAU,4CAEd,CAAE,MAAOsC,GACPtC,EAAU,4CACZ,GAqB4DiB,SAAA,EACpDH,EAAAA,EAAAA,KAAA,SAAOyB,QAAQ,OAAOvB,UAAU,gBAAeC,SAAC,UAGhDH,EAAAA,EAAAA,KAAA,SACE0B,KAAK,OACLzB,GAAG,OACHnB,KAAK,OACLoB,UAAU,gBACVyB,YAAY,YACZ9B,MAAOlB,EAASG,KAChB8C,SAAUjC,EACVkC,UAAQ,KAGV7B,EAAAA,EAAAA,KAAA,SAAOyB,QAAQ,QAAQvB,UAAU,gBAAeC,SAAC,WAGjDH,EAAAA,EAAAA,KAAA,SACE0B,KAAK,QACLzB,GAAG,QACHnB,KAAK,QACLoB,UAAU,gBACVyB,YAAY,aACZ9B,MAAOlB,EAASI,MAChB6C,SAAUjC,EACVkC,UAAQ,KAGV7B,EAAAA,EAAAA,KAAA,SAAOyB,QAAQ,UAAUvB,UAAU,gBAAeC,SAAC,aAGnDH,EAAAA,EAAAA,KAAA,YACElB,KAAK,UACLmB,GAAG,UACHC,UAAU,mBACVyB,YAAY,eACZ9B,MAAOlB,EAASK,QAChB4C,SAAUjC,EACVkC,UAAQ,KAGV7B,EAAAA,EAAAA,KAAA,UAAQ0B,KAAK,SAASxB,UAAU,iBAAgBC,SAAC,oBAKlDlB,IAAUe,EAAAA,EAAAA,KAAA,KAAGE,UAAU,iBAAgBC,SAAElB,WAGtC,C","sources":["components/Contact/Contact.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Contact.css\";\n\nconst Contact = () => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n  });\n  const [status, setStatus] = useState(\"\");\n\n  const navigate = useNavigate();\n  const closeIconRef = useRef(null);\n\n  const handleClose = () => {\n    navigate(\"/\");\n  };\n\n  useEffect(() => {\n    if (closeIconRef.current) {\n      closeIconRef.current.setAttribute(\"inert\", \"true\");\n    }\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setStatus(\"Sending...\");\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/api/contact`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(formData),\n        }\n      );\n      if (response.ok) {\n        setStatus(\"Message sent successfully!\");\n        setFormData({ name: \"\", email: \"\", message: \"\" });\n      } else {\n        setStatus(\"Failed to send message. Please try again.\");\n      }\n    } catch (err) {\n      setStatus(\"Failed to send message. Please try again.\");\n    }\n  };\n\n  return (\n    <section id=\"contact\" className=\"contact-section\">\n      <div className=\"contact-modal\">\n        <FontAwesomeIcon\n          icon={faXmark}\n          className=\"close-icon\"\n          onClick={handleClose}\n          aria-label=\"Close Projects Section\"\n          tabIndex=\"0\"\n          ref={closeIconRef}\n          role=\"button\"\n          aria-hidden=\"false\"\n          onKeyUp={(e) => {\n            if (e.key === \"Enter\" || e.key === \" \") handleClose();\n          }}\n        />\n        <section className=\"modal-content\">\n          <h2 className=\"contact-heading\">Get in Touch</h2>\n          <form className=\"contact-form\" onSubmit={handleSubmit}>\n            <label htmlFor=\"name\" className=\"contact-label\">\n              Name\n            </label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              className=\"contact-input\"\n              placeholder=\"Your Name\"\n              value={formData.name}\n              onChange={handleChange}\n              required\n            />\n\n            <label htmlFor=\"email\" className=\"contact-label\">\n              Email\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              className=\"contact-input\"\n              placeholder=\"Your Email\"\n              value={formData.email}\n              onChange={handleChange}\n              required\n            />\n\n            <label htmlFor=\"message\" className=\"contact-label\">\n              Message\n            </label>\n            <textarea\n              name=\"message\"\n              id=\"message\"\n              className=\"contact-textarea\"\n              placeholder=\"Your Message\"\n              value={formData.message}\n              onChange={handleChange}\n              required\n            ></textarea>\n\n            <button type=\"submit\" className=\"contact-button\">\n              Send Message\n            </button>\n          </form>\n\n          {status && <p className=\"status-message\">{status}</p>}\n        </section>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;\n"],"names":["Contact","formData","setFormData","useState","name","email","message","status","setStatus","navigate","useNavigate","closeIconRef","useRef","handleClose","useEffect","current","setAttribute","handleChange","e","value","target","prevData","_jsx","id","className","children","_jsxs","FontAwesomeIcon","icon","faXmark","onClick","tabIndex","ref","role","onKeyUp","key","onSubmit","async","preventDefault","fetch","method","headers","body","JSON","stringify","ok","err","htmlFor","type","placeholder","onChange","required"],"sourceRoot":""}